---
import { type CollectionEntry, getCollection } from 'astro:content';
import BlogPost from '../../layouts/BlogPost.astro';
import { render } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => {
    // Filter out posts with draft: true
    return !data.draft;
  });
  return posts.map(post => ({
    params: { slug: post.id.toString() },
    props: post,
  }));
}
type Props = CollectionEntry<'blog'>;

const post = Astro.props;
const { Content, remarkPluginFrontmatter } = await render(post);

// Add Git dates from remarkPluginFrontmatter to post.data if they exist
const postData = {
  ...post.data,
  gitCreatedDate: remarkPluginFrontmatter.gitCreatedDate,
  gitLastModified: remarkPluginFrontmatter.gitLastModified,
  minutesRead: remarkPluginFrontmatter.minutesRead,
};
---

<BlogPost {...postData}>
  <Content />
</BlogPost>
