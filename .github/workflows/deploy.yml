name: Deploy Astro to GitHub Pages

on:
  push:
    branches:
      - main      # Deploy when pushing to main branch
  workflow_dispatch:

permissions:
  contents: read
  pages: write
  id-token: write

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository with full history
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch all history for Git dates in blog posts
      
      # Set system time to ensure no future dates
      - name: Set system time to current time
        run: |
          echo "Current timestamp check (before):"
          date
          # Ensure system clock is accurate with GitHub's time
          sudo hwclock --hctosys || echo "hwclock command not available"
          echo "Current timestamp check (after):"
          date

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
      
      # Clean install to avoid dependency issues
      - name: Clean npm cache
        run: npm cache clean --force
      
      - name: Install dependencies
        run: npm ci
      
      # Test git dates functionality
      - name: Debug git dates for blog files
        run: |
          echo "Checking git dates for blog files..."
          for file in src/content/blog/*.mdx; do
            echo "==== $file ===="
            # Check first commit (creation date)
            FIRST_COMMIT=$(git log --follow --format="%ai" --reverse "$file" | head -1)
            echo "First commit date: $FIRST_COMMIT"
            # Check last modification
            LAST_COMMIT=$(git log -1 --format="%ai" "$file")
            echo "Last commit date: $LAST_COMMIT"
            # Ensure no future dates
            if [[ $(date -d "$LAST_COMMIT" +%s) -gt $(date +%s) ]]; then
              echo "WARNING: Future date detected in last commit!"
            fi
            echo ""
          done
      
      - name: Create .env file
        run: |
          echo "PUBLIC_GOATCOUNTER_API_TOKEN=${{ secrets.GOATCOUNTER_API_TOKEN }}" > .env
          echo "GOATCOUNTER_API_TOKEN=${{ secrets.GOATCOUNTER_API_TOKEN }}" >> .env
      
      - name: Build Astro
        run: npm run build
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./dist

  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4 